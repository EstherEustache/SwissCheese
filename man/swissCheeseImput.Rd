% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swissCheeseImput.R
\name{swissCheeseImput}
\alias{swissCheeseImput}
\title{Donor imputation of Swiss cheese nonresponse using the cube method}
\usage{
swissCheeseImput(X, d = NULL, k = NULL, tol = 0.001, max_iter = 2000)
}
\arguments{
\item{X}{a matrix with NA values. The rows correspond to the units.}

\item{d}{a vector containing the sampling weights of units. If NULL (default), all sampling weights are equal to 1.}

\item{k}{the number of neighbors considered to impute each nonrespondent. If NULL (default), the smaller \code{k}
that makes possible to satisfy calibration equations will be chosen.}

\item{tol}{a tolerance parameter. Default value is 1e-3.}

\item{max_iter}{the maximum number of iterations to consider convergence.}
}
\value{
Returns a list including:

\code{X_new} the imputed matrix of \code{X}.

\code{k} the number of neighbors taken into account.
}
\description{
Impute missing values that have not a particular pattern in the dataset by using a donor imputation.
It extends the balanced k-nearest neighbor imputation (Hasler and Tille, 2016) to the treatment of the Swiss cheese nonresponse.
}
\details{
First, the \code{k} nearest neighbors of each nonrespondent are chosen in terms of Euclidean distance.
Next, imputation probabilities from nearest neighbors of each nonrespondent  are computed satisfying some calibration constraints for all variables simultaneously
and to sum to one for each nonrespondent. The method of calibration is based on four requirements (see function \code{\link{calibrateKnn}} and article ... on Arxiv
to a complete description of the calibration constraint).
Then, the function \code{\link[StratifiedSampling::stratifiedcube]{StratifiedSampling::stratifiedcube}} from the package \code{StratifiedSampling} is used to compute the final imputation matrix to choose the donors.
This function uses the cube method (see (Deville and Tille, 2004)).
}
\examples{
Xr  <- rbind(c(0.1,0.3,0.4,0.1), c(0.1,0.3,0.2,0.1), c(0.1,0.2,0.3,0.1),
             c(0.2,0.3,0.2,0.3), c(0.1,0.1,0.2,0.1))
Xm  <- rbind(c(NA,0.1,NA,0.1), c(0.1,NA,0.2,NA))
X <- rbind(Xr,Xm)
swissCheeseImput(X)

}
\references{
Deville, J. C. and Tille, Y. (2004). Efficient balanced sampling: the cube method. Biometrika, 91(4), 893-912.
\emph{Biometrika}, 91(4), 893-912
}
\seealso{
\code{\link[StratifiedSampling::stratifiedcube]{StratifiedSampling::stratifiedcube}}, \code{\link{indKnn}}, \code{\link{calibrateKnn}}, \code{\link{linearImput}}
}
\author{
Esther Eustache \email{esther.eustache@unine.ch}
}
